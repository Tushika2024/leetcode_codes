BETTER-                                                TC=O(N2)         SC=O(1)
int maxSubArray(vector<int>& nums) {
        int maxSum=INT_MIN;
        for(int i=0;i<nums.size();i++){
            int sum=0;
            for(int j=i;j<nums.size();j++){
                sum+=nums[j];
                maxSum=max(maxSum,sum);
            }
        }
        return maxSum;
    }

OPTIMAL-                                                  TC=O(N)   SC=O(1)
int maxSubArray(vector<int>& nums) {                       
                                                           
        int sum=0,maxSum=INT_MIN;                                                                                                  //for printing that maxSum subarray
        for(int val:nums){                                 
                                                             if(sum==0){start=i)
                                                                                                              
            sum+=val;                                     
            maxSum=max(sum,maxSum);                         if(sum>maxSum){maxSum=sum  ansStart=start    ansEnd=i}
            if(sum<0){
                sum=0;
            }
        }
        return maxSum;
    }
