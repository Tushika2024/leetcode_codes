void mergeSort(vector<int>&nums,int start,int end){
        if(start>=end){
            return;
        }
       int mid = start + (end - start) / 2;
        mergeSort(nums,start,mid);
        mergeSort(nums,mid+1,end);
        merge(nums,start,end,mid);
    }
    void merge(vector<int>&nums,int start,int end,int mid){
        vector<int>ans;
        int i=start;
        int j=mid+1;
        while(i<=mid && j<=end){
            if(nums[i]<=nums[j]){
                ans.push_back(nums[i]);
                i++;
            }else{
                ans.push_back(nums[j]);
                j++;
            }
        }
        while(i<=mid){
            ans.push_back(nums[i]);
            i++;
        }
        while(j<=end){
            ans.push_back(nums[j]);
            j++;
        }
        for (int k = 0; k < ans.size(); ++k) {
            nums[start + k] = ans[k];
        }
    }
