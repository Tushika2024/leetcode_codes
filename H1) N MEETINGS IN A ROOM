class Solution {                                    TC=O(N)+O(NLOGN)+O(N)
  public:                                            SC=O(3N)
    static bool comp(pair<pair<int,int>,int>p1,pair<pair<int,int>,int>p2){
        if(p1.first.second<p2.first.second){
            return true;
        }
        return false;
    }
    int maxMeetings(vector<int>& start, vector<int>& end) {
        vector<pair<pair<int,int>,int>>data;
        for(int i=0;i<start.size();i++){
            pair<int,int>time=make_pair(start[i],end[i]);
            data.push_back(make_pair(time,i+1));
        }
        sort(data.begin(),data.end(),comp);
         int freeTime=data[0].first.second;
         int c=1;
         for(int i=1;i<data.size();i++){
             if(data[i].first.first>freeTime){
                 c++;
                 freeTime=data[i].first.second;
             }
        }
        return c;
        
    }
};
