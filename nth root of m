BFA-
int nthRoot(int n, int m) {
        int i=1;
        long long val=pow(i,n);
        while(val!=m){
            i++;
            val=pow(i,n);
            if(val>m){
                return -1;
            }
        }
        return i;
    }

 int nthRoot(int n, int m) {
       for(int i=1;i<=m;i++){
           long long val=pow(i,n);
           if(val==m){
               return i;
           }
           if(val>m){
               return -1;
           }
       }
       return -1;
    }

    
    OPI-
    int nthRoot(int n, int m) {
       int start=0;
       int end=m;
       while(start<=end){
           int mid=start+((end-start)/2);
           long long val=pow(mid,n);
           if(val==m){
               return mid;
           }else if(val<m){
               start=mid+1;
           }else{
               end=mid-1;
           }
       }
       return -1;
    }
