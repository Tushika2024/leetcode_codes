BFA-
int singleNumber(vector<int>& nums) {
        for(int i=0;i<nums.size();i++){
           int c=0;
            for(int j=0;j<nums.size();j++){
                if(nums[j]==nums[i] ){
                    c++;
                }
            }
            if(c==1){
                return nums[i];
            }
        }
        return -1;
    }

    
BETTER-
int singleNumber(vector<int>& nums) {
        unordered_map<long long ,int>mp;
        for(int i=0;i<nums.size();i++){
            mp[nums[i]]++;
        }
        for(auto it:mp){
            if(it.second==1){
                return it.first;
            }
        }
        return -1;
    }

    
OPTIMISED-
int singleNumber(vector<int>& nums) {
        int res=0;
        for(int i=0;i<nums.size();i++){
            res=res^nums[i];
        }
        return res;
    }
