 void cs(vector<int>&candidates,vector<int>ans,vector<vector<int>>&fans,            TC=O(2RAISE TO POWER TARGET *K)  EG= NO 1 TARGET 10  1 REPEAT AUR NOT REPEAR 10 TIMES K TO PUSH K VALUES TO ANS   SC=O(K*X) HYPOTHETHICAL K AVERAGE LENGTH FOR X COMBINATIONS
            int idx,int s,int target){
                if(idx==candidates.size()){
                    if(s==target) fans.push_back(ans);
                    return;
                }
                if(s>target){
                    return;
                }
                if(s==target){
                    fans.push_back(ans);
                    return;
                }
                //repeating
                ans.push_back(candidates[idx]);
                s+=candidates[idx];
                cs(candidates,ans,fans,idx,s,target);
                //non repeating
                ans.pop_back();
                s-=candidates[idx];
                cs(candidates,ans,fans,idx+1,s,target);
                
            }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>>fans;
        vector<int>ans;
        cs(candidates,ans,fans,0,0,target);
        return fans
