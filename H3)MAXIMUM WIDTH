int widthOfBinaryTree(TreeNode* root) {                                        TC=O(N)
            int width=0;                                                       SC=O(N)
            int sidx=-1;
            int eidx=-1;
            if(root==NULL){
                return 0;
            }
            queue<pair<TreeNode*,int>>q;
            q.push({root,0});
            while(!q.empty()){
                int csize=q.size();
                int min=q.front().second;
                for(int i=0;i<csize;i++){
                    TreeNode *cnode=q.front().first;
                    int curr=q.front().second-min;
                   
                    if(i==0) sidx=q.front().second;
                    if(i==csize-1) eidx=q.front().second;
                     q.pop();
                    if(cnode->left !=NULL){
                        
                        q.push({cnode->left,(long long)2*curr+1});
                    }
                    if(cnode->right !=NULL){
                        q.push({cnode->right,(long long)2*curr+2});
                    }
                }
                width=max(width,eidx-sidx+1);
            }
            return width;
    }
