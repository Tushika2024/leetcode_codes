 void rm(vector<vector<int>>&maze,vector<vector<int>>&visited,  TC=O(4 KI POWER N*N)   SC=(ROW+COL)
            string str,vector<string>&fans,
            int cr,int cc,int tr,int tc){
                // str+=pos;
                if((cr==tr-1) && (cc==tc-1)){
                    fans.push_back(str);
                    return;
                }
               //right
               
               if(cr+1<tr && !visited[cr][cc] && maze[cr][cc]){
                   visited[cr][cc]=1;
                   rm(maze,visited,str+'D',fans,cr+1,cc,tr,tc);
                   visited[cr][cc]=0;
               }
                if(cc-1>=0 && !visited[cr][cc] && maze[cr][cc]){
                    visited[cr][cc]=1;
                    rm(maze,visited,str+'L',fans,cr,cc-1,tr,tc);
                    visited[cr][cc]=0;
                }
                if(cc+1<tc && !visited[cr][cc] && maze[cr][cc]){
                   visited[cr][cc]=1;
                   rm(maze,visited,str+'R',fans,cr,cc+1,tr,tc);
                   visited[cr][cc]=0;
               }
                    
                if(cr-1>=0 && !visited[cr][cc] && maze[cr][cc]){
                    visited[cr][cc]=1;
                    rm(maze,visited,str+'U',fans,cr-1,cc,tr,tc);
                    visited[cr][cc]=0;
                }
                
            }
    vector<string> ratInMaze(vector<vector<int>>& maze) {
        // code here
        int tr=maze.size();
        int tc=maze[0].size();
        vector<vector<int>>visited(tr,vector<int>(tc,0));
        vector<string>fans;
        string str="";
        rm(maze,visited,str,fans,0,0,tr,tc);
        return fans;
    }


    void rm(vector<vector<int>>&maze,vector<vector<int>>&visited,
            string str,vector<string>&fans,
            int cr,int cc,int tr,int tc
            ,vector<int>&dr,vector<int>&dc){
                // str+=pos;
                if((cr==tr-1) && (cc==tc-1)){
                    fans.push_back(str);
                    return;
                }
                string dir="DLRU";
            for(int i=0;i<4;i++){
                int nextr=cr+dr[i];
                int nextc=cc+dc[i];
                if(nextr >=0 && nextc>=0 && nextr<tr && nextc<tc && 
                !visited[nextr][nextc] && maze[nextr][nextc]){
                    visited[cr][cc]=1;
                    rm(maze,visited,str+dir[i],fans,nextr,nextc,tr,tc,dr,dc);
                    visited[cr][cc]=0;
                }
            }
                
    }
    vector<string> ratInMaze(vector<vector<int>>& maze) {
        // code here
        int tr=maze.size();
        int tc=maze[0].size();
        vector<vector<int>>visited(tr,vector<int>(tc,0));
        vector<string>fans;
        string str;
        vector<int>dr={+1,0,0,-1};
        vector<int>dc={0,-1,+1,0};
        rm(maze,visited,str,fans,0,0,tr,tc,dr,dc);
        return fans;
    }
