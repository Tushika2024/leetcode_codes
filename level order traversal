vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>>fans;
        if(root==NULL){
            return fans;
        }
       
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty()){
            int size=q.size();
            vector<int>ans;
            for(int i=0;i<size;i++){
                TreeNode *curr=q.front();
                q.pop();
                if(curr->left !=NULL){
                    q.push(curr->left);
                }
                if(curr->right !=NULL){
                    q.push(curr->right);
                }
                ans.push_back(curr->val);
            }
            fans.push_back(ans);
        }
        return fans;
    }





vector<vector<int>> levelOrder(TreeNode* root) {
        vector<int>ans;
        vector<vector<int>>fans;
        if(root==NULL){
            return fans;
        }
       
        queue<TreeNode*>q;
        q.push(root);
        q.push(NULL);
        while(!q.empty()){
            TreeNode *currnode=q.front();
            if(currnode !=NULL){
                if(currnode->left != NULL){
                    q.push(currnode->left);
                }
                if(currnode->right !=NULL){
                    q.push(currnode->right);
                }
                q.pop();
                ans.push_back(currnode->val);
            }else{
                fans.push_back(ans);
                ans={};
                q.pop();
                if(q.empty()){
                    break;
                }else{
                    q.push(NULL);
                }
            }
        }
        return fans;
    }
